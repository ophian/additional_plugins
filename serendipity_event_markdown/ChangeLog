1.42:
=====

 * Markdown library update to 2.0.0

1.41:
=====

 * Add "external link" svg (notable) icon

1.40:
=====

 * Do not perform setPlaintextBody() when not having an entry body

1.39:
=====

 * Push markupeditor* variables into global scope for the staticpage plugin

1.38:
=====

 * Make markupeditortype notice other concurrent markup editor installations (for the user to decide which one to keep!)

1.37:
=====

 * Shorten up PLUGIN_EVENT_MARKDOWN_TRANSFORM on [bg, cs, cz] languages for consistency and backend button bar usage

1.36:
=====

 * Listen on backend_entryform hook for being strict on form buttons based on used markup editor (up from Serendipity Styx 4.0).
   Set a manually added [*] serendipity variable into your local serendipity config file user area, if you would like to use the previous
    PLAINTEXT editor buttons behaviour in your backend entry forms again
    [*]     $serendipity['strict_markup_editors'] = false;

1.35:
=====

 * Fixes for PHP 8 and 'ep_disable_markup_(instance)' checks
 * Finish removing old markdown lib by removing some depending conditionals

1.34:
=====

 * Cleanup and convert tabs to spaces
 * Remove old lib and configuration
 * Raises requirements

1.33:
=====

 * Markdown library update to 1.9.1

1.32:
=====

 * Markdown library update to 1.9.0

1.31:
=====

 * Treat <details> and <summary> tag elements as block level

1.30:
=====

 * Markdown library update to 1.8.0

1.29:
=====

 *  Partially sync (Changes by Thomas Hochstein <thh@inter.net>)
    Undo replacing of ">" (by "&gt;"), done by serendipity_event_unstrip_tags,
    at the beginning of the line in comments to make blockquotes possible.
 *  Depends on serendipity_event_unstrip_tags plugin >= v.1.04

1.28:
-----
 * Silence possible eventData property check

1.27:
-----

 * Fix MarkdownExtra loading (thanks thh)

1.26:
-----

Changes by Thomas Hochstein <thh@inter.net>

 * Some small text changes.
 * Update German translation.
 * Add English and German documentation.

1.25:
-----

Changes by Thomas Hochstein <thh@inter.net>

 * Add CSS for footnotes via addToCSS().

1.24:
-----

 * Avoid passing null value

1.23:
-----

 * Markdown library update to 1.7.0
 * SmartyPants library update to 1.8.1
 * Use with lang API - extends required version to 1.6
 * Cleanup

1.22:
-----

 * Fix for modern PHP versions

Version 1.21:
=============

- update to PHP Markdown 1.0.2
  read http://michelf.ca/projects/php-markdown/
- update to PHP Markdown Extra 1.2.8
- include new lib version 1.4.0
- added optional SmartyPants library, of August, 2013 dev.
  This is a library package that includes the PHP SmartyPants and its 
  sibling PHP SmartyPants Typographer with additional features.
  SmartyPants is a free web typography prettifyier tool for web writers.
  It easily translates plain ASCII punctuation characters into "smart" 
  typographic punctuation HTML entities.
- extend to PHP >= 5.3 only (while lib using namespaces)


Version 1.1.5:
==============
Changes by Lukas Reindl (ljr_nbg [at] web [dot] de)

- Added this ChangeLog file
- Updated PHP Markdown 1.0.1c to 1.0.1o
- Updated PHP Markdown Extra 1.0.1 to 1.2.5
- Patched PHP Markdown and PHP Markdown Extra:
  changed curly brackets for accessing array members to square brackets (see below for details)
  
- - - - - - - - - - - - - - - - - - - - - - 

Changes were done in the following lines (original lines included here):
(Included for documentation. Should be removed in future updates.)

PHP Markdown 1.0.1o
-------------------

- Line 910: $level = $matches[2]{0} == '=' ? 1 : 2;
- Line 1206: $token_stack[0] = str_repeat($token{0}, 3-$token_len);
- Line 1231: $em = $token{0};
- Line 1560: switch ($token{0}) {
- Line 1562: return $this->hashPart("&#". ord($token{1}). ";");

PHP Markdown Extra 1.2.5
------------------------

- Line 934: $level = $matches[2]{0} == '=' ? 1 : 2;
- Line 1230: $token_stack[0] = str_repeat($token{0}, 3-$token_len);
- Line 1255: $em = $token{0};
- Line 1584: switch ($token{0}) {
- Line 1586: return $this->hashPart("&#". ord($token{1}). ";");
- Line 1934: if ($tag{0} == "`") {
- Line 1970: else if ($tag{0} == "\n" || $tag{0} == " ") {
- Line 1998: $tag{1} == '!' || $tag{1} == '?')
- Line 2017: if ($tag{1} == '/')			$depth--;
- Line 2018: else if ($tag{strlen($tag)-2} != '/'  $depth++;
- Line 2122: return array($original_text{0}, substr($original_text, 1));
- Line 2134: $tag{1} == '!' || $tag{1} == '?')
- Line 2145: if ($tag{1} == '/')	  $depth--;
- Line 2146: else if ($tag{strlen($tag)-2} != '/')      $depth++;
- Line 2270: $level = $matches[3]{0} == '=' ? 1 : 2;

